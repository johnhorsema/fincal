import{A as m,g as Z,b as j,c as Q,a as E}from"./index-Ckg37GOx.js";import{I as Y,r as T,c as M,J as R}from"./vendor-D5qdfc4z.js";function ae(){const e=Y({hasError:!1,error:null,message:"",severity:"low",recoveryActions:[],timestamp:null,context:void 0}),t=T({}),r=T([]),s=T(!1),u=T(0),h=T(3),f=M(()=>e.hasError),v=M(()=>Object.keys(t.value).length>0),_=M(()=>r.value.length>0),S=M(()=>f.value||v.value||_.value),C=M(()=>e.error&&u.value<h.value&&e.recoveryActions.some(n=>n.type==="retry")),y=(n,o)=>{const c=Z.handleError(n,o);return e.hasError=!0,e.error=typeof n=="string"?new Error(n):n,e.message=j(n),e.severity=c.severity,e.recoveryActions=Q(c),e.timestamp=new Date,e.context=o,c},O=(n,o)=>(n.status===422&&n.details.details&&I(n.details.details),y(n,{...o,apiStatus:n.status})),z=n=>{r.value=n;const o={};n.forEach(c=>{o[c.field]?Array.isArray(o[c.field])?o[c.field].push(c.message):o[c.field]=[o[c.field],c.message]:o[c.field]=c.message}),I(o)},I=n=>{t.value={...n}},L=(n,o)=>{t.value[n]=o},i=n=>{delete t.value[n]},a=()=>{t.value={},r.value=[]},l=()=>{e.hasError=!1,e.error=null,e.message="",e.severity="low",e.recoveryActions=[],e.timestamp=null,e.context=void 0,u.value=0},A=()=>{l(),a()},P=async n=>{if(C.value){s.value=!0,u.value++;try{n?await n():window.location.reload(),l()}catch(o){y(o,{retryAttempt:u.value})}finally{s.value=!1}}},x=async n=>{try{n.type==="retry"?await P(n.action):(await n.action(),n.type!=="ignore"&&l())}catch(o){y(o,{recoveryAction:n.type})}},F=n=>t.value[n],$=n=>n in t.value,G=n=>{const o=t.value[n];return o?Array.isArray(o)?o[0]:o:""},H=n=>{const o=t.value[n];return o?Array.isArray(o)?o:[o]:[]},q=async(n,o)=>{try{return A(),await n()}catch(c){return c instanceof m?O(c,o):y(c,o),null}},X=async(n,o)=>{const{clearErrorsOnStart:c=!0,context:b}=o||{};c&&A();try{return await n()}catch(p){return p instanceof m?O(p,{...b,formSubmission:!0}):y(p,{...b,formSubmission:!0}),null}},U=(n,o,c)=>{i(n);for(const b of c){const p=b.validate(o);if(!p.isValid)return L(n,p.message),!1}return!0},B=(n,o)=>{a();let c=!0;for(const[b,p]of Object.entries(o))U(b,n[b],p)||(c=!1);return c};return{errorState:R(e),formErrors:R(t),validationErrors:R(r),isRetrying:R(s),retryCount:R(u),hasGlobalError:f,hasFormErrors:v,hasValidationErrors:_,hasAnyError:S,canRetry:C,handleError:y,handleApiError:O,handleValidationError:z,setFormErrors:I,setFieldError:L,clearFieldError:i,clearFormErrors:a,clearGlobalError:l,clearAllErrors:A,retry:P,executeRecoveryAction:x,getFieldError:F,hasFieldError:$,getFieldErrorMessage:G,getFieldErrorMessages:H,withErrorHandling:q,handleFormSubmit:X,validateField:U,validateForm:B}}const se={required:(e="This field is required")=>({validate:t=>({isValid:t!=null&&t!=="",message:e})}),minLength:(e,t)=>({validate:r=>({isValid:(r?r.toString().length:0)>=e,message:t||`Must be at least ${e} characters`})}),maxLength:(e,t)=>({validate:r=>({isValid:(r?r.toString().length:0)<=e,message:t||`Must be no more than ${e} characters`})}),email:(e="Must be a valid email address")=>({validate:t=>({isValid:!t||/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t),message:e})}),numeric:(e="Must be a number")=>({validate:t=>({isValid:!t||!isNaN(Number(t)),message:e})}),positive:(e="Must be a positive number")=>({validate:t=>({isValid:!t||Number(t)>0,message:e})}),uuid:(e="Must be a valid UUID")=>({validate:t=>({isValid:!t||/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(t),message:e})})},w={asset:"Assets",liability:"Liabilities",equity:"Equity",revenue:"Revenue",expense:"Expenses"},V={asset:["Current Assets","Fixed Assets","Investments"],liability:["Current Liabilities","Long-term Liabilities"],equity:["Owner's Equity","Retained Earnings"],revenue:["Sales Revenue","Service Revenue","Other Income"],expense:["Operating Expenses","Cost of Goods Sold","Administrative Expenses"]};function ne(){const e=T([]),t=T(!1),r=T(null),s=M(()=>{const i={asset:[],liability:[],equity:[],revenue:[],expense:[]};return e.value.forEach(a=>{a.type in i&&i[a.type].push(a)}),i}),u=M(()=>e.value.filter(i=>i.isActive));async function h(i){t.value=!0,r.value=null;try{const a=await E.getAccounts(i);Array.isArray(a)?e.value=a:e.value=Object.values(a).flat()}catch(a){const l=a instanceof m?a.message:"Failed to fetch accounts";r.value=l,console.error("Error fetching accounts:",a)}finally{t.value=!1}}async function f(){t.value=!0,r.value=null;try{const i=await E.getAccounts({groupBy:"type"});return Array.isArray(i)?{}:(e.value=Object.values(i).flat(),i)}catch(i){const a=i instanceof m?i.message:"Failed to fetch grouped accounts";return r.value=a,console.error("Error fetching grouped accounts:",i),{}}finally{t.value=!1}}async function v(i){t.value=!0,r.value=null;try{const a=await E.createAccount(i);return e.value.push(a),a}catch(a){const l=a instanceof m?a.message:"Failed to create account";throw r.value=l,console.error("Error creating account:",a),a}finally{t.value=!1}}async function _(i,a){t.value=!0,r.value=null;try{const l=await E.updateAccount(i,a),A=e.value.findIndex(P=>P.id===i);return A!==-1&&(e.value[A]=l),l}catch(l){const A=l instanceof m?l.message:"Failed to update account";throw r.value=A,console.error("Error updating account:",l),l}finally{t.value=!1}}async function S(i){t.value=!0,r.value=null;try{await E.deleteAccount(i),e.value=e.value.filter(a=>a.id!==i)}catch(a){const l=a instanceof m?a.message:"Failed to delete account";throw r.value=l,console.error("Error deleting account:",a),a}finally{t.value=!1}}async function C(i){t.value=!0,r.value=null;try{const a=await E.toggleAccountStatus(i),l=e.value.findIndex(A=>A.id===i);return l!==-1&&(e.value[l].isActive=a.isActive),a}catch(a){const l=a instanceof m?a.message:"Failed to toggle account status";throw r.value=l,console.error("Error toggling account status:",a),a}finally{t.value=!1}}async function y(i){t.value=!0,r.value=null;try{const a=await E.getAccount(i),l=e.value.findIndex(A=>A.id===i);return l!==-1?e.value[l]=a:e.value.push(a),a}catch(a){const l=a instanceof m?a.message:"Failed to fetch account";throw r.value=l,console.error("Error fetching account:",a),a}finally{t.value=!1}}async function O(){try{return await E.getAccountTypes()}catch(i){return console.error("Error fetching account types:",i),{types:w,categories:V}}}function z(i){if(!i.trim())return e.value;const a=i.toLowerCase();return e.value.filter(l=>l.name.toLowerCase().includes(a)||l.category.toLowerCase().includes(a)||w[l.type].toLowerCase().includes(a))}function I(i){return e.value.filter(a=>a.type===i)}function L(){r.value=null}return{accountsList:e,loading:t,error:r,accountsByType:s,activeAccounts:u,fetchAccounts:h,fetchAccountsGrouped:f,fetchAccount:y,createAccount:v,updateAccount:_,deleteAccount:S,toggleAccountStatus:C,fetchAccountTypes:O,searchAccounts:z,getAccountsByType:I,clearError:L,ACCOUNT_TYPES:w,ACCOUNT_CATEGORIES:V}}const g={SCRIPT_TAG:/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,HTML_TAGS:/<[^>]*>/g,JAVASCRIPT_PROTOCOL:/javascript:/gi,DATA_PROTOCOL:/data:/gi,VBSCRIPT_PROTOCOL:/vbscript:/gi,SQL_KEYWORDS:/(\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT)\b)/gi,SQL_COMMENTS:/(--|\*\/|\*|\/\*)/g,PATH_TRAVERSAL:/\.\.[\/\\]/g,EMAIL:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/},d={POST_MAX_LENGTH:500,ACCOUNT_NAME_MAX_LENGTH:100,USER_NAME_MAX_LENGTH:50,PERSONA_NAME_MAX_LENGTH:30,TRANSACTION_DESCRIPTION_MAX_LENGTH:200,MIN_TRANSACTION_ENTRIES:2,MAX_AMOUNT:99999999999e-2,MIN_AMOUNT:.01};function ie(e){const t=[];let r=0,s=0;!e.description||e.description.trim().length===0?t.push("Transaction description is required"):e.description.length>d.TRANSACTION_DESCRIPTION_MAX_LENGTH&&t.push(`Transaction description must be ${d.TRANSACTION_DESCRIPTION_MAX_LENGTH} characters or less`),e.date?e.date>new Date&&t.push("Transaction date cannot be in the future"):t.push("Transaction date is required"),(!e.createdBy||e.createdBy.trim().length===0)&&t.push("Transaction creator is required"),!e.entries||e.entries.length<d.MIN_TRANSACTION_ENTRIES?t.push(`Transaction must have at least ${d.MIN_TRANSACTION_ENTRIES} entries`):(e.entries.forEach((f,v)=>{const _=J(f);_.isValid||t.push(..._.errors.map(S=>`Entry ${v+1}: ${S}`)),f.debitAmount&&(r+=f.debitAmount),f.creditAmount&&(s+=f.creditAmount)}),Math.abs(r-s)>.001&&t.push(`Transaction does not balance. Debits: ${D(r)}, Credits: ${D(s)}`));const u=Math.abs(r-s);return{isValid:t.length===0,errors:t,totalDebits:Math.round(r*100)/100,totalCredits:Math.round(s*100)/100,balance:Math.round(u*100)/100}}function J(e){const t=[];(!e.accountId||e.accountId.trim().length===0)&&t.push("Account ID is required");const r=e.debitAmount!==void 0&&e.debitAmount!==null&&e.debitAmount>0,s=e.creditAmount!==void 0&&e.creditAmount!==null&&e.creditAmount>0;return!r&&!s&&t.push("Entry must have either a debit or credit amount"),r&&s&&t.push("Entry cannot have both debit and credit amounts"),r&&(e.debitAmount<d.MIN_AMOUNT||e.debitAmount>d.MAX_AMOUNT)&&t.push(`Debit amount must be between ${d.MIN_AMOUNT} and ${d.MAX_AMOUNT}`),s&&(e.creditAmount<d.MIN_AMOUNT||e.creditAmount>d.MAX_AMOUNT)&&t.push(`Credit amount must be between ${d.MIN_AMOUNT} and ${d.MAX_AMOUNT}`),{isValid:t.length===0,errors:t}}function D(e,t="USD"){return new Intl.NumberFormat("en-US",{style:"currency",currency:t,minimumFractionDigits:2,maximumFractionDigits:2}).format(e)}function oe(e){return new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric"}).format(e)}function le(){return crypto.randomUUID()}function N(e){return typeof e!="string"?"":e.replace(g.SCRIPT_TAG,"").replace(g.HTML_TAGS,"").replace(g.JAVASCRIPT_PROTOCOL,"").replace(g.DATA_PROTOCOL,"").replace(g.VBSCRIPT_PROTOCOL,"").replace(g.SQL_KEYWORDS,"").replace(g.SQL_COMMENTS,"").trim()}function K(e){return typeof e!="string"?"":e.replace(g.PATH_TRAVERSAL,"").replace(/[^a-zA-Z0-9._-]/g,"_").substring(0,255).trim()}function W(e){return typeof e!="string"?"":e.toLowerCase().trim()}function ce(e){const t=[],r={};if(!e.content||typeof e.content!="string")t.push("Post content is required");else{const s=N(e.content);s.length===0?t.push("Post content cannot be empty after sanitization"):s.length>d.POST_MAX_LENGTH?t.push(`Post content must be ${d.POST_MAX_LENGTH} characters or less`):r.content=s}if(!e.authorId||typeof e.authorId!="string"?t.push("Author ID is required"):/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(e.authorId)?r.authorId=e.authorId:t.push("Invalid author ID format"),!e.authorPersona||typeof e.authorPersona!="string")t.push("Author persona is required");else{const s=N(e.authorPersona);s.length===0?t.push("Author persona cannot be empty"):r.authorPersona=s}if(e.attachments&&Array.isArray(e.attachments)){const s=[];e.attachments.forEach((u,h)=>{if(typeof u=="string"){const f=K(u);f.length>0?s.push(f):t.push(`Attachment ${h+1} has invalid filename`)}else t.push(`Attachment ${h+1} must be a string`)}),r.attachments=s}return{isValid:t.length===0,errors:t,sanitized:t.length===0?r:void 0}}function ue(e){const t=[],r={};if(!e.name||typeof e.name!="string")t.push("Account name is required");else{const u=N(e.name);u.length===0?t.push("Account name cannot be empty after sanitization"):u.length>d.ACCOUNT_NAME_MAX_LENGTH?t.push(`Account name must be ${d.ACCOUNT_NAME_MAX_LENGTH} characters or less`):r.name=u}const s=["asset","liability","equity","revenue","expense"];if(!e.type||!s.includes(e.type)?t.push("Account type must be one of: asset, liability, equity, revenue, expense"):r.type=e.type,!e.category||typeof e.category!="string")t.push("Account category is required");else{const u=N(e.category);u.length===0?t.push("Account category cannot be empty after sanitization"):r.category=u}return e.isActive!==void 0&&(r.isActive=!!e.isActive),{isValid:t.length===0,errors:t,sanitized:t.length===0?r:void 0}}function de(e){const t=[],r={};if(!e.name||typeof e.name!="string")t.push("User name is required");else{const s=N(e.name);s.length===0?t.push("User name cannot be empty after sanitization"):s.length>d.USER_NAME_MAX_LENGTH?t.push(`User name must be ${d.USER_NAME_MAX_LENGTH} characters or less`):r.name=s}if(!e.email||typeof e.email!="string")t.push("User email is required");else{const s=W(e.email);g.EMAIL.test(s)?r.email=s:t.push("User email must be a valid email address")}if(e.personas&&Array.isArray(e.personas)){const s=[];e.personas.forEach((u,h)=>{const f=k(u);f.isValid?f.sanitized&&s.push(f.sanitized):t.push(...f.errors.map(v=>`Persona ${h+1}: ${v}`))}),r.personas=s}return{isValid:t.length===0,errors:t,sanitized:t.length===0?r:void 0}}function k(e){const t=[],r={};if(e.id&&(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(e.id)?r.id=e.id:t.push("Invalid persona ID format")),!e.name||typeof e.name!="string")t.push("Persona name is required");else{const s=N(e.name);s.length===0?t.push("Persona name cannot be empty after sanitization"):s.length>d.PERSONA_NAME_MAX_LENGTH?t.push(`Persona name must be ${d.PERSONA_NAME_MAX_LENGTH} characters or less`):r.name=s}if(!e.role||typeof e.role!="string")t.push("Persona role is required");else{const s=N(e.role);s.length===0?t.push("Persona role cannot be empty after sanitization"):r.role=s}if(e.avatar&&typeof e.avatar=="string"){const s=N(e.avatar);s.length>0&&(r.avatar=s)}return{isValid:t.length===0,errors:t,sanitized:t.length===0?r:void 0}}export{w as A,ne as a,D as b,ie as c,de as d,ue as e,oe as f,le as g,ce as h,V as i,ae as u,se as v};
